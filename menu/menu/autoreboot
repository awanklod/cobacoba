#!/bin/bash
g="\033[1;92m"
y='\033[1;33m' #yellow
Green="\e[92;1m"
RED="\033[31m"
YELLOW="\033[33m"
BLUE="\033[36m"
FONT="\033[0m"
GREENBG="\033[42;37m"
REDBG="\033[41;37m"
OK="${Green}--->${FONT}"
ERROR="${RED}[ERROR]${FONT}"
GRAY="\e[1;30m"
NC='\e[0m'
red='\e[1;31m'
green='\e[0;32m'
DF='\e[39m'
Bold='\e[1m'
Blink='\e[5m'
yell='\e[33m'
red='\e[31m'
green='\e[32m'
blue='\e[34m'
PURPLE='\e[35m'
cyan='\e[36m'
Lred='\e[91m'
Lgreen='\e[92m'
Lyellow='\e[93m'
NC='\e[0m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
LIGHT='\033[0;37m'
grenbo="\e[92;1m"
red() { echo -e "\\033[32;1m${*}\\033[0m"; }
# Getting
CHATID=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 3)
KEY=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 2)
export TIME="10"
export URL="https://api.telegram.org/bot$KEY/sendMessage"
clear
#IZIN SCRIPT
MYIP=$(curl -sS ipv4.icanhazip.com)
echo -e "\e[32mloading...\e[0m"
clear
# Valid Script
ipsaya=$(wget -qO- ipinfo.io/ip)
data_server=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
date_list=$(date +"%Y-%m-%d" -d "$data_server")
data_ip="https://raw.githubusercontent.com/kytrx/regip/main/ip"
checking_sc() {
  useexp=$(wget -qO- $data_ip | grep $ipsaya | awk '{print $3}')
  if [[ $date_list < $useexp ]]; then
    echo -ne
  else
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    echo -e "\033[42m          404 NOT FOUND AUTOSCRIPT          \033[0m"
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    echo -e ""
    echo -e "            ${RED}PERMISSION DENIED !${NC}"
    echo -e "   \033[0;33mYour VPS${NC} $ipsaya \033[0;33mHas been Banned${NC}"
    echo -e "     \033[0;33mBuy access permissions for scripts${NC}"
    echo -e "             \033[0;33mContact Admin :${NC}"
    echo -e "      \033[0;36mTelegram${NC} t.me/YSSHstore"
    echo -e "      ${GREEN}WhatsApp${NC} wa.me/6281215360549"
    echo -e "\033[1;93m────────────────────────────────────────────\033[0m"
    exit
  fi
}
checking_sc
echo -e "\e[32mloading...\e[0m"
clear
# =========================================
BIBlack='\033[1;90m'      # Black
BIRed='\033[1;91m'        # Red
BIGreen='\033[1;92m'      # Green
BIYellow='\033[1;93m'     # Yellow
BIBlue='\033[1;94m'       # Blue
BIPurple='\033[1;95m'     # Purple
BICyan='\033[1;96m'       # Cyan
BIWhite='\033[1;97m'      # White
UWhite='\033[4;37m'       # White
On_IPurple='\033[0;105m'  #
On_IRed='\033[0;101m'
IBlack='\033[0;90m'       # Black
IRed='\033[0;91m'         # Red
IGreen='\033[0;92m'       # Green
IYellow='\033[0;93m'      # Yellow
IBlue='\033[0;94m'        # Blue
IPurple='\033[0;95m'      # Purple
ICyan='\033[0;96m'        # Cyan
IWhite='\033[0;97m'       # White
NC='\e[0m'

# // Export Color & Information
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export YELLOW='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export LIGHT='\033[0;37m'
export NC='\033[0m'

# // Export Banner Status Information
export EROR="[${RED} EROR ${NC}]"
export INFO="[${YELLOW} INFO ${NC}]"
export OKEY="[${GREEN} OKEY ${NC}]"
export PENDING="[${YELLOW} PENDING ${NC}]"
export SEND="[${YELLOW} SEND ${NC}]"
export RECEIVE="[${YELLOW} RECEIVE ${NC}]"
clear
red='\e[1;31m'
green='\e[0;32m'
NC='\e[0m'
MYIP=$(wget -qO- icanhazip.com);
echo "Checking VPS"
clear
if [ ! -e /usr/local/bin/reboot_otomatis ]; then
echo '#!/bin/bash' > /usr/local/bin/reboot_otomatis 
echo 'tanggal=$(date +"%m-%d-%Y")' >> /usr/local/bin/reboot_otomatis 
echo 'waktu=$(date +"%T")' >> /usr/local/bin/reboot_otomatis 
echo 'echo "Sucsesfully Reboot On $tanggal Time $waktu." >> /root/log-reboot.txt' >> /usr/local/bin/reboot_otomatis 
echo '/sbin/shutdown -r now' >> /usr/local/bin/reboot_otomatis 
chmod +x /usr/local/bin/reboot_otomatis
fi
clear
echo -e " ${y}  ┌───────────────────────────────┐$NC"
echo -e " ${y}  │${NC}${g}.::.${NC} MENU AUTOREBOOT $sts ${g}.::. $NC"
echo -e " ${y}  └───────────────────────────────┘$NC"
echo -e    "\033[1;33m  ┌──────────────────────────────────────────┐\033[0m"
echo -e "  ${y}│${NC}${g} 1.${NC}\033[0;36m Set Auto-Reboot 1 Hour"
echo -e "  ${y}│${NC}${g} 2.${NC}\033[0;36m Set Auto-Reboot 6 Hour"
echo -e "  ${y}│${NC}${g} 3.${NC}\033[0;36m Set Auto-Reboot 12 Hour"
echo -e "  ${y}│${NC}${g} 3.${NC}\033[0;36m Set Auto-Reboot 1 Day"
echo -e "  ${y}│${NC}${g} 4.${NC}\033[0;36m Set Auto-Reboot 1 Week"
echo -e "  ${y}│${NC}${g} 5.${NC}\033[0;36m Set Auto-Reboot 1 Month"
echo -e "  ${y}│${NC}${g} 6.${NC}\033[0;36m Deactivate Auto-Reboot"
echo -e "  ${y}│${NC}${g} 7.${NC}\033[0;36m See Reboot Log"
echo -e "  ${y}│${NC}${g} 8.${NC}\033[0;36m Delete Reboot Log"
echo -e "  ${y}│${NC}${g}"
echo -e "  ${y}│${NC}${g} 0.${NC}\033[0;36m BACK TO MENU"
echo -e    "\033[1;33m  └──────────────────────────────────────────┘\033[0m"
echo
read -p " Select menu : " opt
echo -e ""
case $opt in
1 | 01)
clear
echo "59 * * * * root /usr/local/bin/reboot_otomatis" > /etc/cron.d/reboot_otomatis
echo -e "Auto-Reboot Sucsesfully Set By \e[32m1 Hour Period\e[0m"
echo -e "\033[1;93m======================================\033[0m"
echo -e ""
;;
2 | 02)
clear
echo "10 */6 * * * root /usr/local/bin/reboot_otomatis" > /etc/cron.d/reboot_otomatis
echo -e "Auto-Reboot Sucsesfully Set By \e[32m6 Hour Period\e[0m"
echo -e "\033[1;93m======================================\033[0m"
echo -e ""
;;
3 | 03)
clear
echo "10 */12 * * * root /usr/local/bin/reboot_otomatis" > /etc/cron.d/reboot_otomatis
echo -e "Auto-Reboot Sucsesfully Set By \e[32m12 Hour Period\e[0m"
echo -e "\033[1;93m======================================\033[0m"
echo -e ""
;;
4 | 04)
clear
echo "0 0 * * * root /usr/local/bin/reboot_otomatis" > /etc/cron.d/reboot_otomatis
echo -e "Auto-Reboot Sucsesfully Set By \e[32m1 Day Period\e[0m"
echo -e "\033[1;93m======================================\033[0m"
echo -e ""
;;
5 | 05)
clear
echo "10 0 */7 * * root /usr/local/bin/reboot_otomatis" > /etc/cron.d/reboot_otomatis
echo -e "Auto-Reboot Sucsesfully Set By \e[32m1 Week Period\e[0m"
echo -e "\033[1;93m======================================\033[0m"
echo -e ""
;;
6 | 06)
clear
echo "10 0 1 * * root /usr/local/bin/reboot_otomatis" > /etc/cron.d/reboot_otomatis
echo -e "Auto-Reboot Sucsesfully Set By \e[32m1 Month Period\e[0m"
echo -e "\033[1;93m======================================\033[0m"
echo -e ""
;;
7 | 07)
clear
rm -f /etc/cron.d/reboot_otomatis
echo -e "Auto-Reboot Sucsesfully \e[31mDeactivated ..!\e[0m"
echo -e "\033[1;93m======================================\033[0m"
echo -e ""
;;
8 | 08)
clear
if [ ! -e /root/log-reboot.txt ]; then
	echo "No Activity Found"
  echo -e "\033[1;93m======================================\033[0m"
	else 
	#echo ' LOG REBOOT |'
	echo -e "\033[1;93m┌──────────────────────────────────────────┐\033[0m"
echo -e "\033[1;93m│$NC\033[42m               LOG TIME REBOOT            $NC"
echo -e "\033[1;93m└──────────────────────────────────────────┘\033[0m"
	echo -e "\033[1;93m┌──────────────────────────────────────────┐\033[0m"
cat /root/log-reboot.txt
 echo -e "\033[1;93m└──────────────────────────────────────────┘\033[0m"
 echo -e "\033[1;93m======================================\033[0m"
fi
echo -e ""
;;
9 | 09)
clear
echo "" > /root/log-reboot.txt
echo -e "Auto Reboot Log Sucsesfully \e[31mDeleted ..!\e[0m"
echo -e "\033[1;93m======================================\033[0m"
echo -e ""
;;
0 | 00)
clear
menu
;;
x)
exit
;;
*)
echo -e ""
menu
;;
esac
